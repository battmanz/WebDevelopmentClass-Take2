@{
    ViewBag.Title = "Lesson 2";
}

<article>
    <h1>Lesson 2</h1>
    @*<section>
        <h2>A Quiz!</h2>
        <p><a href="https://docs.google.com/forms/d/11ctnQ4CfhnOpQ7_xSpodVFZbEE-QV62BEuuOEk_LZH4/viewform" target="_blank">Lesson 1 quiz</a></p>
    </section>*@

    <section>
        <h2>Images</h2>
        <div>
            <h3>img Tag</h3>
            <p>
                Images are added using the <code>&lt;img /&gt;</code> tag. This tag is a self closing tag; it can't contain content. The <code>src</code> attribute specifies the image
                to be displayed. It is very similar to the anchor's <code>href</code> attribute. The image could be located somewhere on the web or it could be located in the same folder
                as the HTML page. Here is a picture of the San Diego Skyline at night:
            </p>

            <pre><code class="brush: html;">@(@"
            <img src=""http://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/San_Diego_Reflecting_Pond.jpg/800px-San_Diego_Reflecting_Pond.jpg"" />
            ")</code></pre>

            <img src="http://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/San_Diego_Reflecting_Pond.jpg/800px-San_Diego_Reflecting_Pond.jpg" alt="San Diego Skyline at night" title="San Diego" width="800" height="357" />

            <h3>Important Attributes</h3>
            <p>
                Some other important attributes to specify for an image are <code>alt</code>, <code>title</code>, <code>width</code>, and <code>height</code>. The <code>alt</code> attribute
                specifies alternate text to display if the image cannot be found or it can be read by a <a href="http://en.wikipedia.org/wiki/Screen_reader" target="_blank">screen reader</a>.
                The <code>title</code> attribute specifies a tool tip that is displayed when the user hovers over the image. The <code>title</code> attribute is actually an example of a global attribute;
                it can be applied to any element. The <code>width</code> and <code>height</code> are not required, but they inform the browser as to how much space to reserve for the image as it's downloading.
                If they're not specified, the page layout may change as the image loads.
            </p>

            <pre><code class="brush: html;">@(@"
            <img src=""http://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/San_Diego_Reflecting_Pond.jpg/800px-San_Diego_Reflecting_Pond.jpg"" alt=""San Diego Skyline at night"" title=""San Diego"" width=""800"" height=""357"" />
            ")</code></pre>

            <h3>Types of Images</h3>
            <p>
                There are three main types of images that can be displayed on the web, jpg, png, and gif.
            </p>
            <p>
                Choose a jpg when you have an images with lots of colors. Photographs are almost always saved as jpg's. If you take a picture with a digital camera, the file type will be jpg.
            </p>
            <p>
                Choose a gif if you have an img an image with few colors and/or large areas of the same color. Gifs can also be animated, meaning that they have several frames
                that are repeated over and over to make it look like it's moving. Often, animated gifs are just plain annoying. Check out this sweet beauty:
            </p>

            <button type="button" id="showGif">Show</button>
            <button type="button" id="hideGif">Hide</button><br />
            <img src="http://img.pandawhale.com/post-4529-Fat-Spider-Man-wqDT.gif" id="fatSpiderMan" alt="Dancing Fat Spider-Man" width="300" />

            <p>
                Choose a png if you want your image to have parts that are transparent (see-through). Oftentimes, when I make an image in Photoshop, I save it as a png.
            </p>

            <p>
                Frequently we'd like to show an image with a caption. That is what the <code>&lt;figure&gt;</code> and <code>&lt;figcaption&gt;</code> elements are for.
                You still need to use the <code>&lt;img&gt;</code> tag inside of the <code>&lt;figure&gt;</code> element like so:
            </p>

            <pre><code class="brush: html;">@(@"
            <figure>
                <img src=""http://asimo.honda.com/ASIMO_DCTM/News/images/highres/Meet_ASIMO.jpg"" alt=""Asimo"" width=""340"" />
                <figcaption>The world's most advanced humanoid robot</figcaption>
            </figure>
            ")</code></pre>

            <figure>
                <img src="http://asimo.honda.com/ASIMO_DCTM/News/images/highres/Meet_ASIMO.jpg" alt="Asimo" width="340" />
                <figcaption>The world's most advanced humanoid robot</figcaption>
            </figure>
        </div>
    </section>

    <section>
        <h2>Audio and Video</h2>
        <div>
            <h3>Audio</h3>
            <p>
                New in HTML5 you can put audio and video directly into your webpage without having to rely on a flash plugin.
                Let's look at the <code>&lt;audio&gt;</code> element first. The important attributes are:
            </p>

            <dl>
                <dt><code>src</code></dt>
                <dd>Specifies the mp3 or other file that should be played</dd>

                <dt><code>controls</code></dt>
                <dd>
                    Specifies whether controls should be shown to the user (i.e. play, pause, etc).
                    This attribute does not need a value. Just the name alone is sufficient to tell the browser to render controls.
                </dd>

                <dt><code>autoplay</code></dt>
                <dd>Whether the audio should automatically start playing when the page loads</dd>

                <dt><code>preload</code></dt>
                <dd>
                    This attribute can have one of three values: <code>none</code>, <code>auto</code>, or <code>metadata</code>.<br />
                    <code>none</code> means don't download the video until the play button has been clicked.<br />
                    <code>auto</code> means to immediately start downloading the audio file when the page loads.<br />
                    <code>metadata</code> means to only download metadata such as file size, length, etc when the page loads.
                </dd>

                <dt><code>loop</code></dt>
                <dd>Whether the audio should automatically start over when it reaches the end.</dd>
            </dl>

            <p>
                Here's a Piano Puzzler for you taken from the <a href="http://performancetoday.publicradio.org/" target="_blank">Performance Today</a> homepage.
                Can you guess the popular tune as well as the composer?
            </p>

            <pre><code class="brush: html;">@(@"
            <audio src=""http://download.publicradio.org/podcast/performance_today/features/2012/04/16/piano_yesterday_20120416_128.mp3?_kip_ipx=1408073901-1390466965"" controls preload=""auto"" />
            ")</code></pre>

            <audio src="http://download.publicradio.org/podcast/performance_today/features/2012/04/16/piano_yesterday_20120416_128.mp3?_kip_ipx=1408073901-1390466965" controls preload="auto"></audio>

            <h3>Multiple Sources</h3>
            <p>
                Because not every browser supports the same set of audio file types, you can specify multiple sources for the audio element.
                To do so, instead of using the <code>src</code> attribute, you place one or more <code>&lt;source&gt;</code> elements inside of the <code>&lt;audio&gt;</code> element.
                To see a chart showing which browser supports which type, see <a href="https://developer.mozilla.org/en-US/docs/HTML/Supported_media_formats#Browser_compatibility" target="_blank">this site</a>.
            </p>

            <p>
                Here's an example of what that might look like (the file names are made up):
            </p>

            <pre><code class="brush: html;">@(@"
            <audio controls preload=""auto"">
                <source src=""http://www.pretend.com/song.mp3"" />
                <source src=""http://www.pretend.com/song.ogg"" />
            </audio>
            ")</code></pre>

            <h3>Video</h3>
            <p>
                Similar to the <code>&lt;audio&gt;</code> element is the <code>&lt;video&gt;</code> element. Instead of playing audio files, it of course plays video files.
                It has all of the same attributes as the <code>audio</code> element, and three more. The <code>width</code> and <code>height</code> attributes are self-explanatory.
                The other is the <code>poster</code> attribute. This attribute specifies an image to be displayed before the user presses play.
            </p>

            <p>Here's one of my favorite <a href="http://www.ted.com/talks" target="_blank">TED Talks</a>:</p>

            <pre><code class="brush: html;">@(@"
            <video controls preload=""auto"" poster=""http://ridiculouslyefficient.com/wp-content/uploads/2012/08/10018-600x450.jpg"" width=""512"">
                <source src=""http://video.ted.com/talk/podcast/2011X/None/LarrySmith_2011X.mp4"" type=""video/mp4"" />
            </video>
            ")</code></pre>

            <video controls preload="auto" poster="http://ridiculouslyefficient.com/wp-content/uploads/2012/08/10018-600x450.jpg" width="512">
                <source src="http://video.ted.com/talk/podcast/2011X/None/LarrySmith_2011X.mp4" type="video/mp4" />
            </video>

            <h3>Type Attribute</h3>
            <p>
                One additonal thing to note about the <code>&lt;source&gt;</code> element is the <code>type</code> attribute. This tells the browser what type of video format it's in.
                By telling the browser which type it is, it can avoid having to download some of the video just to find out. For a list of media types see this
                <a href="http://en.wikipedia.org/wiki/Internet_media_type#List_of_common_media_types" target="_blank">link</a>.
            </p>
        </div>
    </section>

    <section>
        <h2>Lists</h2>
        <div>
            <p>
                HTML has three basic types of lists. The first one we'll discuss is an ordered list which is denoted by the <code>&lt;ol&gt;</code> tag.
                Items are added to the list using the <code>&lt;li&gt;</code> tag. "li" stands for list item. Because this is an ordered list, each item in the list has a number next to it.
            </p>

            <pre><code class="brush: html;">@(@"
            <p>Things to do today</p>
            <ol>
                <li>Wake up</li>
                <li>Exercise</li>
                <li>Eat breakfast</li>
                <li>Make a freakin' awesome website!</li>
            </ol>
            ")</code></pre>

            <p>
                Another type of list that is very similar to the ordered list is the unordered list. This is denoted with the <code>&lt;ul&gt;</code>.
                This is a bulleted list.
            </p>

            <pre><code class="brush: html;">@(@"
            <p>Things I like</p>
            <ul>
                <li>Sunny days</li>
                <li>Chocolate chip cookies</li>
                <li>A good book</li>
            </ul>
            ")</code></pre>

            <p>
                The third type of list we'll look at is a definition list, denoted by the <code>&lt;dl&gt;</code> tag. This list contains terms and definitions
                for those terms. Each term is denoted by the <code>&lt;dt&gt;</code> tag and its corresponding definition is denoted by the <code>&lt;dd&gt;</code> tag.
            </p>

            <pre><code class="brush: html;">@(@"
            <p>Medical Terms</p>
            <dl>
                <dt>Appendectomy</dt>
                <dd>The surgical removal of the appendix</dd>
                <dt>Poliomyelitis</dt>
                <dd>A viral disease that can affect nerves and can lead to partial or full paralysis.</dd>
            </dl>
            ")</code></pre>
        </div>
    </section>

    <section>
        <h2>Tables</h2>
        <div>
            <h3>Tabular Data</h3>
            <p>
                Tables are used to show tabular data, that is, data that fits nicely into rows and columns (think of a spreadsheet like Microsoft Excel).
                You create a table in HTML by using the <code>&lt;table&gt;</code> tag. You build up the table row-by-row using the <code>&lt;tr&gt;</code> tag.
                "tr" stands for table row. Each row should contain the same number of columns. You create columns using the <code>&lt;td&gt;</code> tag.
                "td" stands for table data. Why not "tc" for table column? I don't know.
            </p>

            <p>
                Here is a table that has two rows and four columns:
            </p>

            <pre><code class="brush: html;">@(@"
            <table>
                <tr>
                    <td>$2050.00</td>
                    <td>$1998.00</td>
                    <td>$2136.00</td>
                    <td>$2201.00</td>
                </tr>
                <tr>
                    <td>$1967.00</td>
                    <td>$2030.00</td>
                    <td>$1899.00</td>
                    <td>$1957.00</td>
                </tr>
            </table>
            ")</code></pre>

            <h3>Row and Column Headers</h3>
            <p>
                What about the column and/or row headers? You can add them too using the <code>&lt;th&gt;</code> tag. "th" stands for table header.
                You can optionally specify the <code>scope</code> attribute to say whether it is a column or row header.
                Let's revamp the previous example to include column and row headers so that we know what the data represents.
            </p>

            <pre><code class="brush: html;">@(@"
            <table>
                <tr>
                    <th></th>
                    <th scope=""col"">Quarter 1</th>
                    <th scope=""col"">Quarter 2</th>
                    <th scope=""col"">Quarter 3</th>
                    <th scope=""col"">Quarter 4</th>
                </tr>
                <tr>
                    <th scope=""row"">2013</th>
                    <td>$2050.00</td>
                    <td>$1998.00</td>
                    <td>$2136.00</td>
                    <td>$2201.00</td>
                </tr>
                <tr>
                    <th scope=""row"">2012</th>
                    <td>$1967.00</td>
                    <td>$2030.00</td>
                    <td>$1899.00</td>
                    <td>$1957.00</td>
                </tr>
            </table>
            ")</code></pre>

            <p>The result</p>

            <table class="table table-bordered">
                <tr>
                    <th></th>
                    <th scope="col">Quarter 1</th>
                    <th scope="col">Quarter 2</th>
                    <th scope="col">Quarter 3</th>
                    <th scope="col">Quarter 4</th>
                </tr>
                <tr>
                    <th scope="row">2013</th>
                    <td>$2050.00</td>
                    <td>$1998.00</td>
                    <td>$2136.00</td>
                    <td>$2201.00</td>
                </tr>
                <tr>
                    <th scope="row">2012</th>
                    <td>$1967.00</td>
                    <td>$2030.00</td>
                    <td>$1899.00</td>
                    <td>$1957.00</td>
                </tr>
            </table>

            <h3>Spanning Rows or Columns</h3>
            <p>
                An item in the table can be made to stretch accross multiple rows using the <code>rowspan</code> attribute or accross multiple columns
                using the <code>colspan</code> attribute. Both attributes accept a number that is the number of rows or columns to span, respecively.
                In the following example we have an item in the table that spans three rows. Notice that the two rows beneath it have one less <code>td</code>
                because of it.
            </p>

            <pre><code class="brush: html;">@(@"
            <table>
                <tr>
                    <th></th>
                    <th scope=""col"">Friday</th>
                    <th scope=""col"">Saturday</th>
                </tr>
                <tr>
                    <th scope=""row"">6:00 am</th>
                    <td>Exercise</td>
                    <td rowspan=""3"">Sleep</td>
                </tr>
                <tr>
                    <th scope=""row"">7:00 am</th>
                    <td>Shower & Commute to work</td>
                </tr>
                <tr>
                    <th scope=""row"">8:00 am</th>
                    <td>Meet with clients</td>
                </tr>
            </table>
            ")</code></pre>

            <table class="table table-bordered">
                <tr>
                    <th></th>
                    <th scope="col">Friday</th>
                    <th scope="col">Saturday</th>
                </tr>
                <tr>
                    <th scope="row">6:00 am</th>
                    <td>Exercise</td>
                    <td rowspan="3">Sleep</td>
                </tr>
                <tr>
                    <th scope="row">7:00 am</th>
                    <td>Shower/Commute</td>
                </tr>
                <tr>
                    <th scope="row">8:00 am</th>
                    <td>Meet with clients</td>
                </tr>
            </table>

            <h3>Caption, Header, and Footer</h3>
            <p>
                Tables can contain a caption using the <code>&lt;caption&gt;</code> tag. It must be the first element inside of the <code>&lt;table&gt;</code> tag.
                For longer tables it is often convenient to use the <code>&lt;thead&gt;</code>, <code>&lt;tbody&gt;</code>, and <code>&lt;tfoot&gt;</code> tags to break
                the table up into sections. The <code>&lt;thead&gt;</code> typically contains a row of table header (<code>&lt;th&gt;</code>) items.
                The <code>&lt;tbody&gt;</code> contains the bulk of the rows, that is, all but the header and footer.
                The <code>&lt;tfoot&gt;</code> could be used to display a summation of the table columns. Let's re-work our previous example that showed earnings by year and quarter.
            </p>

            <pre><code class="brush: html;">@(@"
            <table>
                <caption>Earnings by year and quarter</caption>
                <thead>
                    <tr>
                        <th></th>
                        <th scope=""col"">Quarter 1</th>
                        <th scope=""col"">Quarter 2</th>
                        <th scope=""col"">Quarter 3</th>
                        <th scope=""col"">Quarter 4</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <th scope=""row"">2013</th>
                        <td>$2050.00</td>
                        <td>$1998.00</td>
                        <td>$2136.00</td>
                        <td>$2201.00</td>
                    </tr>
                    <tr>
                        <th scope=""row"">2012</th>
                        <td>$1967.00</td>
                        <td>$2030.00</td>
                        <td>$1899.00</td>
                        <td>$1957.00</td>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <td></td>
                        <td>$4017.00</td>
                        <td>$4028.00</td>
                        <td>$4035.00</td>
                        <td>$4158.00</td>
                    </tr>
                </tfoot>
            </table>
            ")</code></pre>

            <table class="table table-bordered">
                <caption>Earnings by year and quarter</caption>
                <thead>
                    <tr>
                        <th></th>
                        <th scope="col">Quarter 1</th>
                        <th scope="col">Quarter 2</th>
                        <th scope="col">Quarter 3</th>
                        <th scope="col">Quarter 4</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <th scope="row">2013</th>
                        <td>$2050.00</td>
                        <td>$1998.00</td>
                        <td>$2136.00</td>
                        <td>$2201.00</td>
                    </tr>
                    <tr>
                        <th scope="row">2012</th>
                        <td>$1967.00</td>
                        <td>$2030.00</td>
                        <td>$1899.00</td>
                        <td>$1957.00</td>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <td></td>
                        <td>$4017.00</td>
                        <td>$4028.00</td>
                        <td>$4035.00</td>
                        <td>$4158.00</td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </section>
</article>

@section scripts {
    <script>
        $(function () {
            $("article").accordion({
                header: "h2",
                heightStyle: "content",
                collapsible: true,
                active: false
            });
        });
    </script>
    <script>
        SyntaxHighlighter.config.tagName = "code";
        SyntaxHighlighter.defaults["toolbar"] = false;
        SyntaxHighlighter.all();
    </script>
}